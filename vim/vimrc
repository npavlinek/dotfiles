" Enable filetype support, supporting filetype-specific indentation, syntax
" highlighting and other goodies.
filetype plugin indent on

" Enable syntax highlighting, overriding current color settings with defaults.
syntax on

set autoindent
set autoread
set backspace=indent,eol,start
set completeopt=
set display=lastline
set encoding=utf-8
set fileformats=unix,dos,mac
set hidden
set hlsearch
set ignorecase
set incsearch
set laststatus=2
set lazyredraw
set listchars=tab:→\ ,space:·
set nojoinspaces
set nowrap
set ruler
set scrolloff=3
set shortmess+=I
set sidescrolloff=8
set smartcase
set splitbelow
set splitright

set noexpandtab
set shiftwidth=8
set softtabstop=0
set tabstop=8

let g:markdown_recommended_style = 0
let g:python_recommended_style = 0

if has("win32")
	set guicursor=a:block-Cursor
endif

syntax off

let g:mapleader = " "

" Make <Esc> exit insert mode in vertical block mode.
inoremap <C-C> <Esc>

nnoremap <C-D> <C-D>zz
nnoremap <C-U> <C-U>zz
nnoremap <Leader><Leader> <Cmd>nohlsearch<CR>
nnoremap <Leader>p "*p
nnoremap <Leader>q <Cmd>set list!<CR>
nnoremap <Leader>y "*y
nnoremap <Leader>z <Cmd>set spell!<CR>
nnoremap N Nzz
nnoremap j gj
nnoremap k gk
nnoremap n nzz

vnoremap <F2> d:execute 'normal i' . join(sort(split(getreg('"'))), ' ')<CR>
vnoremap <Leader>p "*p
vnoremap <Leader>s :sort<CR>
vnoremap <Leader>y "*y

augroup my_startup
	autocmd!

	" Jump to the last known cursor position in a buffer. Taken from Vim's `defaults.vim`: https://github.com/vim/vim/blob/e978b4534a5e10471108259118c0ef791106fd92/runtime/defaults.vim#L111.
	autocmd BufReadPost *
		\ let line = line("'\"")
		\ | if line >= 1 && line <= line("$") && &filetype !~# "commit" && index(["xxd", "gitrebase"], &filetype) == -1
		\ |   execute "normal! g`\""
		\ | endif
augroup end
